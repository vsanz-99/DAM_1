import java.util.*;

public class Prueba_TreeSet {

	public static void main(String[] args) {

		/*TreeSet<String> ordenaPersonas=new TreeSet<String>();
		// Por defecto, sigue el orden alfabetico (implementa el metodo compareTo)

		ordenaPersonas.add("Sandra");
		ordenaPersonas.add("Amanda");
		ordenaPersonas.add("Diana");

		for (String s : ordenaPersonas) {

			System.out.println(s);

		}*/

		Articulo primero=new Articulo(1, "Primer articulo");

		Articulo segundo=new Articulo(200, "Segundo articulo");

		Articulo tercer=new Articulo(3, "Este es el tercer articulo");

		// Almacenar estos objetos de tipo Articulo en un TreeSet
		TreeSet<Articulo> ordenaArticulos=new TreeSet<Articulo>();

		ordenaArticulos.add(primero);
		ordenaArticulos.add(segundo);
		ordenaArticulos.add(tercer);

		for (Articulo art : ordenaArticulos) {

			System.out.println(art.getDescripcion());

		} // Lo ordena por numero de articulo



		// Creacion de un objeto de tipo Comparator
		Articulo comparadorArticulos=new Articulo();

		TreeSet<Articulo> ordenaArticulos2=new TreeSet<Articulo>(comparadorArticulos); // Se van a ordenar alfabeticamente

		ordenaArticulos2.add(primero);

		ordenaArticulos2.add(segundo);

		ordenaArticulos2.add(tercer);

		System.out.println("");

		for (Articulo art : ordenaArticulos2) {

			System.out.println(art.getDescripcion());

		}

	}

}

class Articulo implements Comparable<Articulo>, Comparator<Articulo> {

	public Articulo() {



	}

	public Articulo(int num, String desc) { // Los articulos van a numerarse y van a tener una descripcion

		numero_articulo=num;

		descripcion=desc;

	}

	@Override
	public int compareTo(Articulo o) { // Devuelve un valor negativo, 0 o 1

		return numero_articulo-o.numero_articulo;

	}

	public String getDescripcion() {
		// TODO Auto-generated method stub
		return descripcion;
	}

	private int numero_articulo;

	private String descripcion;

	@Override
	public int compare(Articulo arg0, Articulo arg1) {
		// TODO Auto-generated method stub
		String descripcionA=arg0.getDescripcion();
		String descripcionB=arg1.getDescripcion();
		return descripcionA.compareTo(descripcionB);
	}

}
